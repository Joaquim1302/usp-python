class Racional:
    def __init__(self, num=0, den=1):
        self.put(num, den)

    def __str__(self):
        return f"{self.num:d}/{self.den:d}"

    def get(self):
        return self.num, self.den

    def put(self, num=0, den=1):
        self.num, self.den = num, den

    def mul(self, other):
        num = self.num * other.num
        den = self.den * other.den
        return Racional(num, den)

    def div(self, other):
        num = self.num * other.den
        den = self.den * other.num
        return Racional(num, den)

    def mdc(self, other):
        """máximo divisor comum"""
        # algoritmo de Euclides iterativo
        a = self.den
        b = other.den
        while b != 0:
            resto = a % b
            a, b = b, resto
        return a

    def mmc(self, other):
        """mínimo múltiplo comum"""
        a = self.den
        b = other.den
        return a * (b / self.mdc(other))

    def add(self, other):
        # mínimo múltiplo comum
        a = self.den
        b = other.den
        return a * (b / self.mdc(other))
        # escreva aqui o seu codigo para os metodos
        #
        #
        # sub
        # e ao menos um teste para cada metodo

        # testes
r1 = Racional(2, 60)
r2 = Racional(1, 100)
# print(r1, '*', r2, '=>', r1.mul(r2))
# # teste do div:
# print(r1, '/', r2, '=>', r1.div(r2))
# #
# outros testes
print("mdc de", r1, 'e', r2, '=>', r1.mdc(r2))
print("mmc de", r1, 'e', r2, '=>', r1.mmc(r2))
